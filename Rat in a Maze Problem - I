class Solution {
    ArrayList<String> ans = new ArrayList<String>();
    
    public void dfs (int [][] mat,int i,int j,String temp) {
        int n = mat.length;
        int m = mat[0].length;
        
        
        if(i<0 || i>=n || j<0 || j>=m   ) return;
        if(mat[i][j] == 0) return;
        
        if(i ==n-1 && j==m-1) {
            ans.add(temp);
            return;
        }
        
        if( mat[i][j] == 1) {
            mat[i][j] = 0;
            dfs(mat,i+1,j,temp+"D");
            dfs(mat,i-1,j,temp+"U");
            dfs(mat,i,j-1,temp+"L");
            dfs(mat,i,j+1,temp+"R");
             mat[i][j] = 1;
        }
    }
    public ArrayList<String> findPath(int[][] mat) {
        dfs(mat,0,0,"");
        if(ans.size() == 0) {
             ArrayList<String> wrong = new ArrayList<String>();
                wrong.add("-1");
                return wrong;
        }
        return ans;
    }