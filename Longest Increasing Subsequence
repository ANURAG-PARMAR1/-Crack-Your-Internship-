class Solution {
    int dp[][];
    int solve(int []nums,int n,int prev) {
        if(n < 0) return 0;

        if(dp[n][prev+1] != -1) return dp[n][prev+1];
        if(prev == -1 || nums[n] < nums[prev]) return dp[n][prev+1] = Math.max(1 + solve(nums,n-1,n),solve(nums,n-1,prev));
        else return dp[n][prev+1] = 0 + solve(nums,n-1,prev);
    }
    public int lengthOfLIS(int[] nums) {
        
        dp = new int[nums.length][nums.length+1];
        for(int []arr:dp) {
           Arrays.fill(arr,-1);
        }
        return solve(nums,nums.length-1,-1);
    }
}